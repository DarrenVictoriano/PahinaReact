{"version":3,"sources":["providers/postContext.js","components/navbar/navbar.js","components/content/home/home.js","components/content/porfolio/portfolio.js","components/content/posts/codeBlock.js","components/content/posts/postThumbnail.js","components/content/posts/postPage.js","components/content/posts/postBody.js","components/content/posts/postForm.js","components/auth/login.js","components/notfound/pageNotFound.js","App.js","index.js"],"names":["PostContext","createContext","PostProvider","props","isMobile","useMediaQuery","query","useState","allPost","setAllPost","userID","setUserID","appear","setAppear","Provider","value","children","NavBar","expanded","setExpanded","useContext","mobileCheckState","useCookies","cookies","removeCookie","history","useHistory","Navbar","fixed","expand","className","variant","Brand","exact","to","activeClassName","onClick","options","strings","autoStart","loop","pauseFor","changeDeleteSpeed","changeDelay","Toggle","aria-controls","Collapse","id","Nav","target","token","path","push","Home","appearState","CSSTransition","in","timeout","classNames","href","rel","Portfolio","posPicker","mod","map","item","i","pos","project","key","alt","title","src","link","body","stacks","CodeBlock","this","language","style","darcula","PureComponent","defaultProps","PostThumbnail","overview","date","allPostState","format","source","escapeHtml","renderers","code","Button","event","preventDefault","headerConfig","axios","delete","then","msg","get","data","catch","err","console","log","PostPage","useEffect","_id","date_created","PostBody","useParams","post","setPost","PostForm","markdownTitle","setMarkdownTitle","markdownBody","setMarkDownBody","length","slice","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","minRows","put","updatedItem","itemPosted","Login","loadingState","isError","setIsError","isLoading","setIsLoading","username","setUsername","password","setPassword","setCookie","Spinner","animation","width","height","noValidate","isInvalid","Feedback","encryptedData","accountInfo","PageNotFound","role","aria-label","App","Helmet","bodyAttributes","component","from","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.565f9c77.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const PostContext = createContext();\n\nexport const PostProvider = (props) => {\n\n    // this will return true if viewport is less than 500px\n    const isMobile = useMediaQuery({ query: '(max-width: 991px)' });\n\n    // all post\n    const [allPost, setAllPost] = useState([]);\n\n    // userID\n    const [userID, setUserID] = useState(\"\");\n\n    // for animation\n    const [appear, setAppear] = useState(true);\n\n\n    return (\n        <PostContext.Provider value={{\n            \"mobileCheckState\": isMobile,\n            \"allPostState\": [allPost, setAllPost],\n            \"userIDState\": [userID, setUserID],\n            \"appearState\": [appear, setAppear]\n        }}>\n            {props.children}\n        </PostContext.Provider>\n    );\n}","import React, { useContext, useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Typewriter from 'typewriter-effect';\nimport './navbar.css';\nimport '../../App.css';\nimport { PostContext } from '../../providers/postContext';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nconst NavBar = (props) => {\n\n    const [expanded, setExpanded] = useState(false);\n    const { mobileCheckState } = useContext(PostContext);\n    const isMobile = mobileCheckState;\n\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    let history = useHistory();\n\n    const handleLogout = () => {\n        // reset to defaul value so we logout\n        removeCookie('token', { path: '/' });\n        history.push(\"/\");\n\n        // this is for mobile view\n        setExpanded(false);\n    }\n\n    return (\n        <Navbar fixed=\"top\" expanded={expanded} expand=\"lg\" className=\"bg-navy\" variant={(isMobile ? \"dark\" : \"text-slate\")}>\n            <Navbar.Brand className=\"brand-name\">\n                <NavLink\n                    exact to=\"/deets\"\n                    className=\"brand-link\"\n                    activeClassName=\"active\"\n                    onClick={() => setExpanded(false)}>\n                    <h1 className=\"brand-h1\">\n                        <Typewriter\n                            options={{\n                                strings: ['Darren', 'Victoriano', \"へ‿(ツ)‿ㄏ\", \"Darren Victoriano\"],\n                                autoStart: true,\n                                loop: true,\n                                pauseFor: 100,\n                                changeDeleteSpeed: 1,\n                                changeDelay: 1\n                            }}\n                        />\n                    </h1>\n                </NavLink>\n\n            </Navbar.Brand>\n            <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n\n                </Nav>\n                <Nav className=\"nav-link \">\n                    <NavLink\n                        exact to=\"/\"\n                        className=\"px-3 nav-link\"\n                        activeClassName=\"active\"\n                        onClick={() => setExpanded(false)}>\n                        Home\n                    </NavLink>\n\n                    <NavLink\n                        exact to=\"/portfolio\"\n                        className=\"px-3 nav-link\"\n                        activeClassName=\"active\"\n                        onClick={() => setExpanded(false)}>\n                        Portfolio\n                    </NavLink>\n\n                    <NavLink\n                        exact to=\"/blog\"\n                        className=\"px-3 nav-link\"\n                        activeClassName=\"active\"\n                        onClick={() => setExpanded(false)}>\n                        Blog\n                    </NavLink>\n\n                    <NavLink\n                        exact to=\"/resume/VR040.pdf\"\n                        className=\"px-3 nav-link\"\n                        target=\"_blank\"\n                        onClick={() => setExpanded(false)}>\n                        Resume\n                    </NavLink>\n\n                    {cookies.token &&\n                        <NavLink\n                            exact to=\"/logout\"\n                            className=\"px-3 nav-link\"\n                            activeClassName=\"active\"\n                            onClick={handleLogout}>\n                            <i className=\"fas fa-lock\"></i>\n                        </NavLink>\n                    }\n\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar >\n    );\n}\n\nexport default NavBar;","import React, { useContext } from 'react';\nimport { PostContext } from '../../../providers/postContext';\nimport './home.css';\nimport '../../../App.css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Home = () => {\n\n    const { mobileCheckState, appearState } = useContext(PostContext);\n    const [appear] = appearState;\n    const isMobile = mobileCheckState;\n\n    return (\n        <CSSTransition\n            in={appear}\n            appear={true}\n            timeout={1000}\n            classNames=\"fade\"\n        >\n            <div className={\"text-center \" + (isMobile ? \"home-content-mb\" : \"home-content\")}>\n                <p className={\"text-slate-lighter mb-0 p-0 \" + (isMobile ? \"home-content-title-mb\" : \"home-content-title\")}>\n                    Software Engineer\n                </p>\n                <hr className={(isMobile ? \"title-hr-mb\" : \"title-hr\")} />\n                <p className={\"text-slate \" + (isMobile ? \"home-content-desc-mb mx-2\" : \"lead\")}>\n                    Specializing in Test Automation and developing FullStack Web Application.\n                </p>\n                <div className=\"media-icons\">\n                    <a href=\"https://www.linkedin.com/in/darren-victoriano/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                    </a>\n                    <a href=\"https://github.com/DarrenVictoriano\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-github fa-2x\"></i>\n                    </a>\n                    <a href=\"mailto:darren.victoriano@gmail.com\">\n                        <i className=\"fas fa-envelope fa-2x\"></i>\n                    </a>\n                </div>\n            </div>\n        </CSSTransition>\n    );\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport { PostContext } from '../../../providers/postContext';\nimport './portfolio.css';\nimport '../../../App.css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Portfolio = () => {\n\n    const { mobileCheckState, appearState } = useContext(PostContext);\n    const isMobile = mobileCheckState;\n    const [appear] = appearState;\n\n    const projects = [\n        {\n            \"id\": \"001\",\n            \"src\": \"/portfolio/atvaudit-500x350.png\",\n            \"title\": \"atvAudit\",\n            \"body\": \"A fullstack web application that scans an Android device for all the packages currently installed in it and will highlight the application/s that had an update compared to the last time the atvAuto last scanned the same device device.\",\n            \"stacks\": [\"React\", \"Node.js\", \"Express\", \"Shell.js\", \"ADB\", \"ContextAPI\"],\n            \"link\": \"https://github.com/DarrenVictoriano/atvAudit\"\n        },\n        {\n            \"id\": \"002\",\n            \"src\": \"/portfolio/atvauto-500x350.png\",\n            \"title\": \"atvAuto\",\n            \"body\": \"This is an AndroidTV automation framework, mostly used to stress test an Android TV. This tool uses Android Debug Shell (ADB) through IP to control the device.\",\n            \"stacks\": [\"Python\", \"ADB\", \"TKinter\"],\n            \"link\": \"https://github.com/DarrenVictoriano/atvAuto\"\n        },\n        {\n            \"id\": \"003\",\n            \"src\": \"/portfolio/maddpass-500x350.png\",\n            \"title\": \"madPass\",\n            \"body\": \"A fullstack web password manager, it uses AES (Advanced Encryption System) algorithm with a 256-bit encryption key to encrypt all the data and hashes the master password.\",\n            \"stacks\": [\"React\", \"Node.js\", \"Express\", \"Crypto\", \"JSONWebToken\"],\n            \"link\": \"https://madpass.herokuapp.com/\"\n        },\n        {\n            \"id\": \"004\",\n            \"src\": \"/portfolio/trivia-500x350.png\",\n            \"title\": \"Trivia Game\",\n            \"body\": \"This is a timed trivia game. With 10 random question every set, you have 15 seconds to answer each question correctly. This repo uses the Open Trivia DataBase API: https://opentdb.com/api_config.php\",\n            \"stacks\": [\"HTML5/CSS3\", \"Bootstrap4\", \"JavaScript\", \"Ajax\"],\n            \"link\": \"https://darrenvictoriano.github.io/TriviaGame/\"\n        },\n        {\n            \"id\": \"005\",\n            \"src\": \"/portfolio/word-500x350.png\",\n            \"title\": \"Word Guess Game\",\n            \"body\": \"This is a responsive web browser game based on the classic Hangman game. This also uses bootstrap framework to make the webpage responsive. The algorithmn are written in JavaScript and jQuery.\",\n            \"stacks\": [\"HTML5/CSS3\", \"Bootstrap4\", \"JavaScript\", \"Ajax\"],\n            \"link\": \"https://darrenvictoriano.github.io/Word-Guess-Game/\"\n        },\n        {\n            \"id\": \"006\",\n            \"src\": \"/portfolio/scrape-500x350.png\",\n            \"title\": \"Article Scraper\",\n            \"body\": \"Simple web scraping web app that utilize NodeJS's Cheerio framework to scrape data from the web. Mongoose Framework to create a model for the data that was scraped as well as saving it to MongoDB.\",\n            \"stacks\": [\"Node.js\", \"Express\", \"MongoDB\", \"Cheerio\"],\n            \"link\": \"https://article-scrapers.herokuapp.com/\"\n        }\n    ];\n\n    const contentCreator = (pos, project) => {\n\n        if (pos === \"left\") {\n            return (\n                <div key={project.id} id={project.id} className={\"row mb-7 \" + (isMobile ? \" \" : \"mx-5\")}>\n                    <div className=\"col-lg-6\">\n                        <div className={(isMobile ? \"text-center\" : \"text-right\")}>\n                            <img alt={project.title} src={project.src} className=\"img-fluid rounded\" />\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                        <div className={\"text-left \" + (isMobile ? \"pt-3 \" : \"mt-5 pt-3 pr-5\")}>\n                            <a className=\"learn-more\" target=\"_blank\" rel=\"noopener noreferrer\" href={project.link}>\n                                <h3>{project.title}</h3>\n                            </a>\n\n                            <p>{project.body + \" \"}</p>\n\n\n                            <div className={\"text-green small \" + (isMobile ? \"text-center\" : \" \")}>\n                                {project.stacks.map((item) => (\n                                    <span className={(isMobile ? \"px-1\" : \"px-3\")}>{item}</span>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <hr className=\"project-hr mt-7\" />\n                </div>\n            );\n        } else {\n            return (\n                <div key={project.id} id={project.id} className={\"row mb-7 \" + (isMobile ? \" \" : \"mx-5\")}>\n                    <div className=\"col-lg-6\">\n                        <div className={\"text-right \" + (isMobile ? \"pt-3 \" : \"mt-5 pt-3 pl-5\")}>\n                            <a className=\"learn-more\" target=\"_blank\" rel=\"noopener noreferrer\" href={project.link}>\n                                <h3>{project.title}</h3>\n                            </a>\n\n                            <p>{project.body + \" \"}</p>\n                            <div className={\"text-green small \" + (isMobile ? \"text-center\" : \" \")}>\n                                {project.stacks.map((item) => (\n                                    <span className={(isMobile ? \"px-1\" : \"px-3\")}>{item}</span>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                        <div className={(isMobile ? \"text-center\" : \"text-left\")}>\n                            <img alt={project.title} src={project.src} className=\"img-fluid rounded\" />\n                        </div>\n                    </div>\n                    <hr className=\"project-hr mt-7\" />\n                </div >\n            );\n        }\n    }\n\n    const posPicker = (mod) => {\n        if (mod === \"mobile\") {\n            return \"left\";\n        } else {\n            if (mod % 2 === 0) {\n                return \"left\";\n            } else {\n                return \"right\";\n            }\n        }\n    }\n\n    return (\n        <div className={\"container text-slate \" + (isMobile ? \"pt-8\" : \"pt-10\")}>\n\n            {\n                projects.map((item, i) => (\n\n                    <CSSTransition\n                        in={appear}\n                        appear={true}\n                        timeout={1000}\n                        classNames=\"fade\"\n                    >\n                        {contentCreator((isMobile ? posPicker(\"mobile\") : posPicker(i)), item)}\n                    </CSSTransition>\n\n                ))\n            }\n\n        </div>\n    );\n}\n\nexport default Portfolio;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n\nclass CodeBlock extends PureComponent {\n    static propTypes = {\n        value: PropTypes.string,\n        language: PropTypes.string\n    };\n\n    static defaultProps = {\n        language: null\n    };\n\n    render() {\n        const { language, value } = this.props;\n\n        return (\n            <SyntaxHighlighter language={language} style={darcula}>\n                {value ? value : \" \"}\n            </SyntaxHighlighter>\n        );\n    }\n}\n\nexport default CodeBlock;","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { PostContext } from '../../../providers/postContext';\nimport Moment from 'react-moment';\nimport Button from 'react-bootstrap/Button';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './codeBlock';\nimport '../../../App.css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst PostThumbnail = ({ id, title, overview, date }) => {\n\n    const { mobileCheckState, allPostState, appearState } = useContext(PostContext);\n    const [appear] = appearState;\n    const isMobile = mobileCheckState;\n    const [cookies] = useCookies(['token', 'userID']);\n    const [allPost, setAllPost] = allPostState;\n\n    let history = useHistory();\n\n    const handleEdit = (event) => {\n        event.preventDefault();\n        history.push(\"/deets/\" + id);\n    }\n\n    const handleDelete = (event) => {\n        event.preventDefault();\n\n        // create header\n        let headerConfig = {\n            \"headers\": {\n                \"x-header-token\": cookies.token\n            }\n        }\n\n        // delete post\n        axios.delete(\"/api/v1/post/\" + id, headerConfig)\n            .then(msg => {\n                // update allPost\n                // get all post\n                axios.get(\"/api/v1/post/\")\n                    .then(allPost => {\n                        setAllPost(allPost.data)\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    // TODO: make the overview markdown friendly!\n\n    return (\n        <div className={\"bg-navy-light rounded container \" + (isMobile ? \"p-3 mb-3\" : \"p-5 mb-5\")}>\n            <CSSTransition\n                in={appear}\n                appear={true}\n                timeout={1000}\n                classNames=\"fade\"\n            >\n                <div className=\"row\">\n                    <div className=\"col-lg-11\">\n                        <Link exact to={\"/blog/\" + id} className=\"link-router\">\n                            <h1 className={\"text-slate-light mb-0 read-article\"}>{title}</h1>\n                        </Link>\n                        <p className={\"text-slate mb-0\"}><Moment format=\"MMMM DD, YYYY\" date={date} /></p>\n                        <hr></hr>\n                        <div className={\"text-slate-light\"}>\n                            <ReactMarkdown\n                                source={overview + \"...\"}\n                                escapeHtml={false}\n                                renderers={{ code: CodeBlock }}\n                            />\n                        </div>\n                    </div>\n                    {\n                        cookies.token && <div className={\"col-lg-1 \" + (isMobile ? \"mt-2\" : \"\")}>\n                            <Button onClick={handleEdit} className={\"btn-sm btn-size \" + (isMobile ? \"mr-3\" : \"mb-3\")}>\n                                Edit\n                        </Button>\n                            <Button onClick={handleDelete} className=\"btn-danger btn-sm btn-size \">\n                                Delete\n                        </Button>\n                        </div>\n                    }\n                </div>\n            </CSSTransition>\n\n        </div>\n    );\n}\n\nexport default PostThumbnail;","import React, { useContext, useEffect } from 'react';\nimport { PostContext } from '../../../providers/postContext';\nimport './postStyles.css';\nimport '../../../App.css';\nimport PostThumbnail from './postThumbnail';\nimport axios from 'axios';\nimport { CSSTransition } from 'react-transition-group';\n\nconst PostPage = () => {\n\n    const { mobileCheckState, allPostState, appearState } = useContext(PostContext);\n    const [appear] = appearState;\n    const isMobile = mobileCheckState;\n    const [allPost, setAllPost] = allPostState;\n\n    useEffect(() => {\n        // get all post\n        axios.get(\"/api/v1/post/\")\n            .then(allPost => {\n                setAllPost(allPost.data)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }, []);\n\n    return (\n        <div className={\"container text-slate \" + (isMobile ? \"pt-8\" : \"pt-10\")}>\n            {\n                allPost.map((item) => (\n                    <CSSTransition\n                        in={appear}\n                        appear={true}\n                        timeout={1000}\n                        classNames=\"fade\"\n                    >\n                        <PostThumbnail key={item._id} id={item._id} title={item.title} date={item.date_created} overview={item.overview} />\n                    </CSSTransition>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default PostPage;","import React, { useContext, useState, useEffect } from 'react';\nimport { PostContext } from '../../../providers/postContext';\nimport './postStyles.css';\nimport '../../../App.css';\nimport { useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport Moment from 'react-moment';\nimport axios from 'axios';\nimport CodeBlock from './codeBlock';\nimport { CSSTransition } from 'react-transition-group';\n\nconst PostBody = (props) => {\n\n    // get the ID from the URL\n    const { id } = useParams();\n\n    const { mobileCheckState, appearState } = useContext(PostContext);\n    const [appear] = appearState;\n    const [post, setPost] = useState({});\n\n    const isMobile = mobileCheckState;\n\n    useEffect(() => {\n        axios.get(\"/api/v1/post/\" + id)\n            .then(item => {\n                setPost(item.data);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, [id])\n\n\n    return (\n        <div className={\"container text-slate-light \" + (isMobile ? \"mt-8\" : \"mt-10\")}>\n            <CSSTransition\n                in={appear}\n                appear={true}\n                timeout={1000}\n                classNames=\"fade\"\n            >\n                <div className={\"bg-navy-light mb-5 container rounded \" + (isMobile ? \"p-3\" : \"p-5\")}>\n                    <h1 className=\"text-slate-light mb-0\">{post.title}</h1>\n                    <p className=\"text-slate mb-0\">by: Darren Victoriano</p>\n                    <p className=\"text-slate\">\n                        <Moment format=\"MMMM DD, YYYY\" date={post.date_created} />\n                    </p>\n                    <hr className=\"mb-4\"></hr>\n                    <ReactMarkdown\n                        source={post.body}\n                        escapeHtml={false}\n                        renderers={{ code: CodeBlock }}\n                    />\n\n                </div>\n            </CSSTransition>\n        </div>\n\n    );\n}\n\nexport default PostBody;","import React, { useContext, useState, useEffect } from 'react';\nimport { PostContext } from '../../../providers/postContext';\nimport './postStyles.css';\nimport '../../../App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport CodeBlock from './codeBlock';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { CSSTransition } from 'react-transition-group';\n\nconst PostForm = (props) => {\n\n    const { mobileCheckState, appearState } = useContext(PostContext);\n    const [appear] = appearState;\n\n    const isMobile = mobileCheckState;\n    const [cookies] = useCookies(['token', 'userID']);\n\n    const [markdownTitle, setMarkdownTitle] = useState(\"\");\n    const [markdownBody, setMarkDownBody] = useState(\"\");\n\n    let history = useHistory();\n\n    // get the ID from the URL\n    const { id } = useParams();\n\n    // build data\n    let data = {\n        \"title\": markdownTitle,\n        \"overview\": markdownBody.length > 100 ? markdownBody.slice(0, 200) : markdownBody,\n        \"body\": markdownBody\n    }\n\n    // build header\n    let headerConfig = {\n        \"headers\": {\n            \"x-header-token\": cookies.token\n        }\n    }\n\n    useEffect(() => {\n        if (id) {\n            // get one post\n            axios.get(\"/api/v1/post/\" + id)\n                .then(item => {\n                    setMarkdownTitle(item.data.title);\n                    setMarkDownBody(item.data.body);\n                })\n                .catch(err => {\n                    setMarkdownTitle(\"\");\n                    setMarkDownBody(\"\");\n                })\n        } else {\n            setMarkdownTitle(\"\");\n            setMarkDownBody(\"\");\n        }\n    }, []);\n\n    const handleUpdate = (event) => {\n        event.preventDefault();\n\n        // do some edits\n        axios.put(\"/api/v1/post/\" + id, data, headerConfig)\n            .then(updatedItem => {\n                // view the article\n                history.push(\"/blog/\" + id);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    const handlePublish = (event) => {\n        event.preventDefault();\n\n        // save as new\n        axios.post(\"/api/v1/post\", data, headerConfig)\n            .then(itemPosted => {\n                // then view the article\n                history.push(\"/blog/\" + itemPosted.data._id);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <div className={\"container-fluid \" + (isMobile ? \"mt-8\" : \"mt-10\")}>\n            <CSSTransition\n                in={appear}\n                appear={true}\n                timeout={1000}\n                classNames=\"fade\"\n            >\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <Form>\n                            <Form.Group controlId=\"postFormTitle\">\n                                <Form.Label>Title</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter title\"\n                                    value={markdownTitle}\n                                    onChange={e => setMarkdownTitle(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicBody\">\n                                <Form.Label>Body</Form.Label>\n                                <TextareaAutosize\n                                    className=\"form-control\"\n                                    placeholder=\"Mardown body...\"\n                                    minRows=\"40\"\n                                    value={markdownBody}\n                                    onChange={e => setMarkDownBody(e.target.value)}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"text-center\" controlId=\"formBasicSubmit\">\n                                {\n                                    id ? <Button onClick={handleUpdate} variant=\"info\">\n                                        Update\n                                    </Button>\n                                        : <Button onClick={handlePublish} variant=\"info\">\n                                            Publish\n                                    </Button>\n                                }\n                            </Form.Group>\n\n                        </Form>\n                    </div>\n                    <div className={\"col-lg-6 \"}>\n                        <div className=\"p-1\">\n                            <h1 className=\"mb-4\">{markdownTitle}</h1>\n                            <ReactMarkdown\n                                source={markdownBody}\n                                escapeHtml={false}\n                                renderers={{ code: CodeBlock }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </CSSTransition>\n        </div>\n    );\n}\n\nexport default PostForm;","import React, { useContext, useState } from 'react';\nimport './login.css';\nimport { PostContext } from '../../providers/postContext';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst Login = () => {\n\n    const { mobileCheckState, appearState, loadingState } = useContext(PostContext);\n    const [appear] = appearState;\n    const isMobile = mobileCheckState;\n\n    const [isError, setIsError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [cookies, setCookie] = useCookies(['token', 'userID']);\n    let history = useHistory();\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n\n        // set loading\n        setIsLoading(true);\n\n        // check empty fields\n        if (!username || !password) {\n            setIsError(true);\n        }\n\n        // construct data before passing to API\n        const data = {\n            \"username\": username,\n            \"password\": password\n        }\n\n        // first encyrpt payload\n        axios.post(\"/api/v1/user/crypto\", data)\n            .then(encryptedData => {\n                // return axios call with the encrpted payload\n                return axios.post(\"/api/v1/user/auth\", encryptedData.data)\n            })\n            .then(accountInfo => {\n                // set loading back to false\n                setIsLoading(false);\n\n                // save token in cookie\n                setCookie('token', accountInfo.data.token, { path: '/' });\n                history.push(\"/deets\");\n            })\n            .catch(err => {\n                setUsername(\"\");\n                setPassword(\"\");\n                // set loading back to false\n                setIsLoading(false);\n                // set Error\n                setIsError(true);\n            })\n\n    };\n\n    const handleNope = (event) => {\n        event.preventDefault();\n        history.push(\"/\");\n    }\n\n    return (\n        <div className={\"container text-slate \" + (isMobile ? \"mt-8\" : \"mt-10\")}>\n            <CSSTransition\n                in={appear}\n                appear={true}\n                timeout={1000}\n                classNames=\"fade\"\n            >\n                <div className=\"text-center\">\n                    <h1>Are you Darren?</h1>\n                    {\n                        isLoading ? <Spinner animation=\"border\" className=\"text-green mt-5\" style={{ width: '10rem', height: '10rem' }} />\n                            : <Form noValidate className=\"form-login mx-auto mt-5\">\n                                <Form.Group controlId=\"userGroup\">\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"username\"\n                                        value={username}\n                                        onChange={e => setUsername(e.target.value)}\n                                        isInvalid={isError} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"passGroup\">\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        isInvalid={isError} />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        nice try.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"buttonGroup\">\n                                    <Button onClick={handleLogin} variant=\"primary\" className=\"mx-2 btn-sizer btn-sm\">\n                                        Yes\n                                    </Button>\n                                    <Button onClick={handleNope} variant=\"primary\" className=\"mx-2 btn-sizer btn-sm\" >\n                                        Nope\n                                    </Button>\n                                </Form.Group>\n                            </Form>\n                    }\n                </div>\n            </CSSTransition>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useContext } from 'react';\nimport './pageNotFound.css';\nimport { PostContext } from '../../providers/postContext';\n\nconst PageNotFound = () => {\n\n    const { mobileCheckState } = useContext(PostContext);\n    const isMobile = mobileCheckState;\n\n    return (\n        <div className=\"container\">\n            <div className={\"container text-center \" + (isMobile ? \"mt-100-mb\" : \"mt-100\")}>\n                <h1>such empty</h1>\n                <h1><span role=\"img\" aria-label=\"sad\">🥺</span></h1>\n            </div>\n        </div>\n    );\n\n}\n\nexport default PageNotFound;","import React from 'react';\nimport './App.css';\nimport NavBar from './components/navbar/navbar';\nimport Helmet from 'react-helmet';\nimport Home from './components/content/home/home';\nimport Portfolio from './components/content/porfolio/portfolio';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport PostPage from './components/content/posts/postPage';\nimport PostBody from './components/content/posts/postBody';\nimport PostForm from './components/content/posts/postForm';\nimport Login from './components/auth/login';\nimport { useCookies } from 'react-cookie';\nimport PageNotFound from './components/notfound/pageNotFound';\n\nfunction App() {\n\n  const [cookies] = useCookies(['token']);\n\n  return (\n    <Router>\n      <div className=\"App container-fluid px-0\">\n\n        <Helmet bodyAttributes={{ style: 'background-color : #0a192f' }} />\n        <NavBar />\n\n        <Switch> {/* switch should only contain routes and no other elements, otherwise it wont work correctly */}\n          <Route exact={true} path=\"/\" component={Home} />\n          <Route exact={true} path=\"/portfolio\" component={Portfolio} />\n          <Route exact={true} path=\"/deets\" component={cookies.token ? PostForm : Login} />\n          <Route exact={false} path=\"/deets/:id\" component={cookies.token ? PostForm : PageNotFound} />\n          <Route exact={true} path=\"/blog\" component={PostPage} />\n          <Route exact={false} path=\"/blog/:id\" component={PostBody} />\n\n          <Redirect from=\"/logout\" to=\"/\" />\n\n          <Route component={PageNotFound} />\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Import Font Awesome\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport { PostProvider } from './providers/postContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PostProvider>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </PostProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}